apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  creationTimestamp: '2025-04-01T00:21:01Z'
  generation: 7
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          .: {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2025-04-01T00:21:01Z'
    - apiVersion: tekton.dev/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:params': {}
          'f:tasks': {}
      manager: Mozilla
      operation: Update
      time: '2025-04-17T00:14:29Z'
  name: build-and-push-podman
  namespace: pipeline-test
  resourceVersion: '8989510'
  uid: d3f7bf45-1a2e-4265-8708-a46085b7b649
spec:
  params:
    - description: Name of the image to build
      name: IMAGE_NAME
      type: string
    - default: latest
      description: Tag for the image
      name: IMAGE_TAG
      type: string
    - description: Container registry URL
      name: REGISTRY_URL
      type: string
    - name: GIT_REF
      type: string
    - name: GIT_REPO
      type: string
  tasks:
    - name: fetch-source
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REF)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: package
      runAfter:
        - fetch-source
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: maven-settings
          workspace: shared-workspace
    - name: build-image
      runAfter:
        - package
      taskSpec:
        metadata: {}
        params:
          - name: IMAGE_NAME
            type: string
          - name: IMAGE_TAG
            type: string
        spec: null
        steps:
          - computeResources: {}
            env:
              - name: IMAGE_NAME
                value: $(params.IMAGE_NAME)
              - name: IMAGE_TAG
                value: $(params.IMAGE_TAG)
            image: quay.io/containers/podman
            name: podman-build
            script: |
              #!/bin/sh
              set -e
              podman build -t $IMAGE_NAME:$IMAGE_TAG -f Containerfile .
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-and-push
      runAfter:
        - build-image
      taskSpec:
        metadata: {}
        params:
          - name: IMAGE_NAME
            type: string
          - name: IMAGE_TAG
            type: string
          - name: REGISTRY_URL
            type: string
        spec: null
        steps:
          - computeResources: {}
            env:
              - name: IMAGE_NAME
                value: $(params.IMAGE_NAME)
              - name: IMAGE_TAG
                value: $(params.IMAGE_TAG)
              - name: REGISTRY_URL
                value: $(params.REGISTRY_URL)
            image: quay.io/containers/podman
            name: tag-and-push
            script: |
              #!/bin/sh
              set -e
              IMAGE=$REGISTRY_URL/$IMAGE_NAME:$IMAGE_TAG
              podman tag $IMAGE_NAME:$IMAGE_TAG $IMAGE
              podman login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $REGISTRY_URL
              podman push $IMAGE
      workspaces:
        - name: source
          workspace: shared-workspace
  workspaces:
    - name: shared-workspace
